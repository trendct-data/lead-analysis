{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Replicating the Vox lead risk map for CT\"\nauthor: \"Andrew Ba Tran\"\ndate: \"April 6, 2016\"\noutput: html_document\n---\n\nThis is an exploratory map going over the steps described by [Sarah Frostenson](https://github.com/voxmedia/data-projects/tree/master/vox-lead-exposure-risk) at Vox and Rad Cunningham from the Washington State Department of Health that estimates a neighborhood's risk for lead exposure. It inspired the TrendCT.org story [Which neighborhoods have the highest risk of lead poisoning in CT?](http://trendct.org/2016/04/08/where-the-risk-for-lead-poisoning-in-connecticut-is-highest/)\n\nCheck out the Vox story this was based on: [The risk of lead poisoning isnâ€™t just in Flint. So we mapped the risk in every neighborhood in America.](http://www.vox.com/a/lead-exposure-risk-map)\n\n### Overview\n\n**What's going on here**\n\n* Pulling housing and poverty data by census tract from the Census via the excellent [censusapi R package](https://github.com/hrecht/censusapi)\n* Calculating a housing score based on weighted categorizations of home ages\n* Determining percent of those living beneath the poverty line by census tract\n* Getting a Z score for housing and poverty\n* Creating an overall score by combining both poverty and housing Z scores (after adjusting them a bit)\n* Splitting the range of results between 1 and 10, creating an overall score\n* Joining the results to a census tract shape file and mapping it\n* Evolution of this methodology: STATA script via WA-DOH -> Python script via Vox -> R script via TrendCT.org\n\n------\n\nFirst, load a bunch of packages. \n\n```{r setup, message=FALSE, warning=FALSE}\nlibrary(dplyr)\nlibrary(scales)\nrequire(rgdal)\nrequire(ggmap)\nrequire(Cairo)\nrequire(maptools)\nlibrary(ggplot2)\n#devtools::install_github(\"hrecht/censusapi\")\nlibrary(censusapi)\nsource(\"keys.R\")\nlibrary(DT)\n```\n\nThen, pull the data via the Census API - [censusapi R package](https://github.com/hrecht/censusapi).\n\nAnd assess the lead risk based on a [formula by WA-DOH](https://assets.documentcloud.org/documents/2644455/Expert-Panel-Childhood-Lead-Screening-Guidelines.pdf).\n\n```{r pulling_data}\n\nhousing <- getCensus(name=\"acs5\", \n                      vintage=2014,\n                      key=censuskey, \n                      vars=c(\"NAME\", \"B25034_001E\", \"B25034_002E\", \"B25034_003E\", \n                             \"B25034_004E\",\"B25034_005E\",\"B25034_006E\",\"B25034_007E\",\n                             \"B25034_008E\",\"B25034_009E\",\"B25034_010E\", \"B17004_001E\"), \n                      region=\"tract:*\", regionin=\"state:09\") \n\n# Change state FIPS code above for a tract data for a different state-- but you'll need to bring in the matching shape file\n\n# You can only pull one state at a time but you can loop the function to get tracts for all states with this code\n\n# tracts <- NULL\n## For all states in the fips list\n# for (f in fips) {\n    ## Define what state to get\n    # stateget <- paste(\"state:\", f, sep=\"\")\n    ## Get data for all tracts within that state\n    # temp <- getCensus(name=\"acs5\", vintage=2014, \n    # key=censuskey, \n    # vars=c(\"NAME\", \"B25034_001E\", \"B25034_002E\", \"B25034_003E\", \n    #                         \"B25034_004E\",\"B25034_005E\",\"B25034_006E\",\"B25034_007E\",\n    #                         \"B25034_008E\",\"B25034_009E\",\"B25034_010E\", \"B17004_001E\"), \n    # region=\"tract:*\", regionin=stateget)\n    ## Bind to existing data\n    # tracts <- rbind(tracts, temp)\n# }\n## You can apply this to poverty below, too\n\nold <- housing\n\nold$age_39 <- old$B25034_010E * .68\nold$age40_59 <- (old$B25034_009E + old$B25034_008E) * .43\nold$age60_79 <- (old$B25034_007E + old$B25034_006E) * .08\nold$age80_99 <- (old$B25034_005E + old$B25034_004E) * .03\nold$age00_10 <- (old$B25034_003E + old$B25034_002E) * 0\nold$total <-  old$B25034_001E\n\nold$risk_sum <- old$age_39 + old$age40_59 + old$age60_79 + old$age80_99 + old$age80_99 + old$age00_10\nold$risk <- old$risk_sum/old$total*100\nold <- subset(old, total>0)\n\n\n## Displaying the new columns of the downloaded dataframe\n\ndatatable(head(old[c(\"NAME\", \"total\", \"risk_sum\", \"risk\")]))\n```\n\n-----\n\nS1701 (part of the original Vox methodology) is not accessible via the Census API but I found the equivalent in B06012.\n\n```{r pulling_poverty}\npoverty <- getCensus(name=\"acs5\", \n                      vintage=2014,\n                      key=censuskey, \n                      vars=c(\"NAME\", \"B06012_001E\", \"B06012_002E\"\n                      ), \n                      region=\"tract:*\", regionin=\"state:09\")\n\npoverty$percent_poverty <- poverty$B06012_002E/poverty$B06012_001E * 100\npoverty <- subset(poverty, B06012_001E>0)\n\n## Displaying the first few rows of the downloaded dataframe\n\ndatatable(head(poverty[c(\"NAME\", \"B06012_001E\", \"B06012_002E\", \"percent_poverty\")]))\n```\n\n-----\n\nDetermining the Z score now.\n\n```{r Z}\n# (x-mean(x))/sd(x)\n\npoverty$z_poverty <- (poverty$percent_poverty - mean(poverty$percent_poverty))/sd(poverty$percent_poverty)\nold$z_housing <-  (old$risk - mean(old$risk))/sd(old$risk)\n\n# Calcuating weighted figures\n\npoverty$weighted_poverty <- poverty$z_poverty * .42\nold$weighted_housing <- old$z_housing * .58\n\n# join dataframes\n\npoverty$tract_id <- paste0(poverty$state, poverty$county, poverty$tract)\nold$tract_id <- paste0(old$state, old$county, old$tract)\n\nold <- old[c(\"tract_id\", \"risk\", \"z_housing\", \"weighted_housing\")]\n\ndf <- left_join(poverty, old)\n\ndf$riskscore_raw <- df$weighted_housing + df$weighted_poverty\n\n# calculating deciles on risk score\n\ndf <- mutate(df, quantile = ntile(riskscore_raw, 10))\ndf$id <- df$tract\n\n## Displaying the new columns of the downloaded dataframe\ndatatable(head(df[c(\"id\", \"z_poverty\", \"weighted_poverty\", \"risk\", \"z_housing\", \"weighted_housing\", \"riskscore_raw\", \"quantile\")]))\n```\n\n-----\n## Generating the map\n\nDownload the census blocks for other states from the [Census](here https://www.census.gov/geo/maps-data/data/cbf/cbf_tracts.html).\n\n```{r map, fig.width=12, fig.height=7}\n# Setting up the environment to handle spatial information\ngpclibPermit()\ngpclibPermitStatus()\n\n# Bringing in the shapefiles in a folder downloaded from the Census\n# Find other states here https://www.census.gov/geo/maps-data/data/cbf/cbf_tracts.html\n\ncensustracts <- readOGR(dsn=\"maps/census_tracts/wgs84\", layer=\"tractct_37800_0000_2010_s100_census_1_shp_wgs84\")\ncensustracts <- fortify(censustracts, region=\"TRACTCE10\")\n\nrisk_map <- left_join(censustracts, df)\n\nggplot() +\n  geom_polygon(data = risk_map, aes(x=long, y=lat, group=group, fill=quantile), color = \"black\", size=0.2) +\n  coord_map() +\n  scale_fill_distiller(type=\"seq\", trans=\"reverse\", palette = \"Reds\", breaks=pretty_breaks(n=10)) +\n  theme_nothing(legend=TRUE) +\n  labs(title=\"Estimated lead risk in Connecticut\", fill=\"\")\n```\n",
    "created" : 1459970793231.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "817753425",
    "id" : "C500F293",
    "lastKnownWriteTime" : 1460127761,
    "last_content_update" : 1460127761,
    "path" : "~/Documents/Github/trendct-data/2016/03/lead-analysis/geospatial_lead_risk.Rmd",
    "project_path" : "geospatial_lead_risk.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 16,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}