{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Which neighborhoods have the highest risk of lead poisoning in CT?\"\nauthor: \"Andrew Ba Tran\"\ndate: \"April 8, 2016\"\noutput: html_document\n---\n\n#### This is an exploratory analysis looking at the relationships between various data sets:\n1. Department of Health stats on the number of children who have tested for high levels of lead in their blood\n2. U.S. Environmental Protection Agency data on public drinking water systems in CT that tested for elevated levels of lead\n3. U.S. Census data on housing and poverty. Combined, they can predict lead exposure risk.\n* Based on methodology described by [Sarah Frostenson](https://github.com/voxmedia/data-projects/tree/master/vox-lead-exposure-risk) at Vox and Rad Cunningham from the Washington State Department of Health. \n* Check out the Vox story that looks at lead risk exposure for all census tracts across the country: [The risk of lead poisoning isn’t just in Flint. So we mapped the risk in every neighborhood in America.](http://www.vox.com/a/lead-exposure-risk-map)\n\nThis analysis is the basis for the TrendCT.org story [Which neighborhoods have the highest risk of lead poisoning in CT?](http://trendct.org/2016/04/08/where-the-risk-for-lead-poisoning-in-connecticut-is-highest/) Not all of what was produced here ended up in the story. We encourage visitors to look over our calculations and expand upon our analysis.\n\n-----\n\nFirst, let's load up a bunch of packages for data wrangling, geospatial analysis, visualizations, and a neat package that interfaces with the Census API ([censusapi R package](https://github.com/hrecht/censusapi)).\n\n```{r setup, message=FALSE, warning=FALSE}\nlibrary(dplyr)\nlibrary(scales)\nrequire(rgdal)\nrequire(ggmap)\nrequire(Cairo)\nrequire(maptools)\nlibrary(ggplot2)\n#devtools::install_github(\"hrecht/censusapi\")\nlibrary(censusapi)\nsource(\"keys.R\")\nlibrary(stringr)\nlibrary(rvest)\nlibrary(tidyr)\nlibrary(corrgram)\nlibrary(gridExtra)\n```\n\nAlright, setting up the \n```{r map1, message=FALSE, warning=FALSE, fig.width=12, fig.height=7}\ngpclibPermit()\ngpclibPermitStatus()\n\n## Setting up the town tracts from the ctgeo towns shapefile in the maps folder\n## Other state town (county subdivisions) border shapefiles can be downloaded from the Census\n## https://www.census.gov/cgi-bin/geo/shapefiles/index.php\ntowntracts <- readOGR(dsn=\"maps\", layer=\"ctgeo\")\ntowntracts <- fortify(towntracts, region=\"NAME10\")\n\n# Bringing in data \n# This data is a cleaned up spreadsheet from a previous story:\n# http://trendct.org/2016/01/27/children-screened-for-lead-poisoning-in-connecticut/\n\n# The original data set can be found on the CT Department of Health website:\n# http://www.ct.gov/dph/cwp/view.asp?a=3140&q=387576\n\nscreenings_total <- read.csv(\"data/confirmed.town.total.csv\", stringsAsFactors=FALSE)\n\n## Note: BLL stands for blood lead levels. There are different groupings: 5, 10, 15, and 20.\n## Health officials must be notified if a child has five or more micrograms of lead per deciliter of blood (µg/dL) \n\n# BLL5 total children\nbll5_total <- screenings_total[c(\"Town\", \"BLL5\")]\ncolnames(bll5_total) <- c(\"id\", \"bll5\")\n\n# joining the data to the formatted shapefile\nbll5_total_map <- left_join(towntracts, bll5_total)\n\ndtm5_total <- ggplot() +\n  geom_polygon(data = bll5_total_map, aes(x=long, y=lat, group=group, fill=bll5), color = \"black\", size=0.2) +\n  coord_map() +\n  scale_fill_distiller(type=\"seq\", trans=\"reverse\", palette = \"Blues\", breaks=pretty_breaks(n=10)) +\n  theme_nothing(legend=TRUE) +\n  labs(title=\"Lead-poisoned children by town (BLL 5 and up)\", fill=\"\")\n\n# BLL10 total children\nbll10_total <- screenings_total[c(\"Town\", \"BLL10\")]\ncolnames(bll10_total) <- c(\"id\", \"bll10\")\n\nbll10_total_map <- left_join(towntracts, bll10_total)\n\ndtm10_total <- ggplot() +\n  geom_polygon(data = bll10_total_map, aes(x=long, y=lat, group=group, fill=bll10), color = \"black\", size=0.2) +\n  coord_map() +\n  scale_fill_distiller(type=\"seq\", trans=\"reverse\", palette = \"Blues\", breaks=pretty_breaks(n=10)) +\n  theme_nothing(legend=TRUE) +\n  labs(title=\"Lead-poisoned children by town (BLL 10 and up)\", fill=\"\")\n\n# BLL15 total children\nbll15_total <- screenings_total[c(\"Town\", \"BLL15\")]\ncolnames(bll15_total) <- c(\"id\", \"bll15\")\n\nbll15_total_map <- left_join(towntracts, bll15_total)\n\ndtm15_total <- ggplot() +\n  geom_polygon(data = bll15_total_map, aes(x=long, y=lat, group=group, fill=bll15), color = \"black\", size=0.2) +\n  coord_map() +\n  scale_fill_distiller(type=\"seq\", trans=\"reverse\", palette = \"Blues\", breaks=pretty_breaks(n=10)) +\n  theme_nothing(legend=TRUE) +\n  labs(title=\"lead-poisoned children by town (BLL 15 and up)\", fill=\"\")\n\n# BLL20  total children\nbll20_total <- screenings_total[c(\"Town\", \"BLL20\")]\ncolnames(bll20_total) <- c(\"id\", \"bll20\")\n\nbll20_total_map <- left_join(towntracts, bll20_total)\n\ndtm20_total <- ggplot() +\n  geom_polygon(data = bll20_total_map, aes(x=long, y=lat, group=group, fill=bll20), color = \"black\", size=0.2) +\n  coord_map() +\n  scale_fill_distiller(type=\"seq\", trans=\"reverse\", palette = \"Blues\", breaks=pretty_breaks(n=10)) +\n  theme_nothing(legend=TRUE) +\n  labs(title=\"Lead-poisoned children by town (BLL 20 and up)\", fill=\"\")\n\n# Output of the totals map\ngrid.arrange(dtm5_total,dtm10_total,dtm15_total,dtm20_total, ncol=2)\n```\n\n#### Not that interesting, right? Looks like a population map.\n\nLet's try it again with percent of children\n\n```{r percent.children, message=FALSE, warning=FALSE, fig.width=12, fig.height=7}\n# This data is a cleaned up spreadsheet from a previous project\n# The original data set can be found on the CT Department of Health website:\n# http://www.ct.gov/dph/cwp/view.asp?a=3140&q=387576\n\nscreenings_percent <- read.csv(\"data/confirmed.town.percent.csv\", stringsAsFactors=FALSE)\n\n# BLL5 percent\nbll5_percent <- screenings_percent[c(\"Town\", \"BLL5\")]\ncolnames(bll5_percent) <- c(\"id\", \"bll5\")\n\nbll5_percent_map <- left_join(towntracts, bll5_percent)\n\ndtm5_percent <- ggplot() +\n  geom_polygon(data = bll5_percent_map, aes(x=long, y=lat, group=group, fill=bll5), color = \"black\", size=0.2) +\n  coord_map() +\n  scale_fill_distiller(type=\"seq\", trans=\"reverse\", palette = \"Blues\", breaks=pretty_breaks(n=10)) +\n  theme_nothing(legend=TRUE) +\n  labs(title=\"% of lead-poisoned children by town (BLL 5 +)\", fill=\"\")\n\n# BLL10 percent\nbll10_percent <- screenings_percent[c(\"Town\", \"BLL10\")]\ncolnames(bll10_percent) <- c(\"id\", \"bll10\")\n\nbll10_percent_map <- left_join(towntracts, bll10_percent)\n\ndtm10_percent <- ggplot() +\n  geom_polygon(data = bll10_percent_map, aes(x=long, y=lat, group=group, fill=bll10), color = \"black\", size=0.2) +\n  coord_map() +\n  scale_fill_distiller(type=\"seq\", trans=\"reverse\", palette = \"Blues\", breaks=pretty_breaks(n=10)) +\n  theme_nothing(legend=TRUE) +\n  labs(title=\"Percent of lead-poisoned children by town (BLL 10 +)\", fill=\"\")\n\n# BLL15 percent\nbll15_percent <- screenings_percent[c(\"Town\", \"BLL15\")]\ncolnames(bll15_percent) <- c(\"id\", \"bll15\")\n\nbll15_percent_map <- left_join(towntracts, bll15_percent)\n\ndtm15_percent <- ggplot() +\n  geom_polygon(data = bll15_percent_map, aes(x=long, y=lat, group=group, fill=bll15), color = \"black\", size=0.2) +\n  coord_map() +\n  scale_fill_distiller(type=\"seq\", trans=\"reverse\", palette = \"Blues\", breaks=pretty_breaks(n=10)) +\n  theme_nothing(legend=TRUE) +\n  labs(title=\"% of lead-poisoned children by town (BLL 15 +)\", fill=\"\")\n\n# BLL20 percent\nbll20_percent <- screenings_percent[c(\"Town\", \"BLL20\")]\ncolnames(bll20_percent) <- c(\"id\", \"bll20\")\n\nbll20_percent_map <- left_join(towntracts, bll20_percent)\n\ndtm20_percent <- ggplot() +\n  geom_polygon(data = bll20_percent_map, aes(x=long, y=lat, group=group, fill=bll20), color = \"black\", size=0.2) +\n  coord_map() +\n  scale_fill_distiller(type=\"seq\", trans=\"reverse\", palette = \"Blues\", breaks=pretty_breaks(n=10)) +\n  theme_nothing(legend=TRUE) +\n  labs(title=\"% of lead-poisoned children by town (BLL 20 +)\", fill=\"\")\n\n# Outputting the maps\n\ngrid.arrange(dtm5_percent,dtm10_percent,dtm15_percent,dtm20_percent, ncol=2)\n```\n\n#### This looks more interesting. Unsurprisingly, rural areas with small populations have a higher percent.\n\n### Looking at where children have been screened\n\n```{r screened, message=FALSE, warning=FALSE, fig.width=12, fig.height=7}\n# This data is a cleaned up spreadsheet from a previous project\n# The original data set can be found on the CT Department of Health website:\n# http://www.ct.gov/dph/cwp/view.asp?a=3140&q=387576\n\nscreened <- read.csv(\"data/children.screened.csv\", stringsAsFactors=FALSE)\nscreened_total <- screened[c(\"Town\", \"Children.Under.6.Screened\")]\n\ncolnames(screened_total) <- c(\"id\", \"Children.Under.6.Screened\")\n\nscreened_total_map <- left_join(towntracts, screened_total)\ndtm_s <- ggplot() +\n  geom_polygon(data = screened_total_map, aes(x=long, y=lat, group=group, fill=Children.Under.6.Screened), color = \"black\", size=0.2) +\n  coord_map() +\n  scale_fill_distiller(type=\"seq\", trans=\"reverse\", palette = \"Reds\", breaks=pretty_breaks(n=10)) +\n  theme_nothing(legend=TRUE) +\n  labs(title=\"Children screened for lead-poisoning by town\", fill=\"\")\n\nscreened_percent <- screened[c(\"Town\", \"Percent.9m.2yrs.Screened\")]\n\ncolnames(screened_percent) <- c(\"id\", \"Percent.9m.2yrs.Screened\")\n\nscreened_percent_map <- left_join(towntracts, screened_percent)\ndtm_p <- ggplot() +\n  geom_polygon(data = screened_percent_map, aes(x=long, y=lat, group=group, fill=Percent.9m.2yrs.Screened), color = \"black\", size=0.2) +\n  coord_map() +\n  scale_fill_distiller(type=\"seq\", trans=\"reverse\", palette = \"Reds\", breaks=pretty_breaks(n=10)) +\n  theme_nothing(legend=TRUE) +\n  labs(title=\"% of children screened by town\", fill=\"\")\n\ngrid.arrange(dtm_s,dtm_p, ncol=2)\n```\n\n-----\n\n#### Alright, let's look at the lead risk formula as applied to towns\n\n**What's going on here**\n\n * Pulling housing and poverty data by census tract from the Census via the excellent [censusapi R package](https://github.com/hrecht/censusapi)\n * Calculating a housing score based on weighted categorizations of home ages\n * Determining percent of those living beneath the poverty line by census tract\n * Getting a Z score for housing and poverty\n * Creating an overall score by combining both poverty and housing Z scores (after adjusting them a bit)\n * Splitting the range of results between 1 and 10, creating an overall score\n * Joining the results to the town shape file and mapping it like above\n * Here's the same process as below but applied to census tracts in Connecticut: [Replicating the Vox lead risk map for CT](http://trendct.github.io/data/2016/03/lead-analysis/geospatial_lead_risk.html)\n \n```{r censusstuff, message=FALSE, warning=FALSE, fig.width=12, fig.height=7}\nhousing_towns <- getCensus(name=\"acs5\", \n                           vintage=2014,\n                           key=censuskey, \n                           vars=c(\"NAME\", \"B25034_001E\", \"B25034_002E\", \"B25034_003E\", \n                                  \"B25034_004E\",\"B25034_005E\",\"B25034_006E\",\"B25034_007E\",\n                                  \"B25034_008E\",\"B25034_009E\",\"B25034_010E\", \"B17004_001E\"\n                           ), \n                           region=\"county subdivision:*\", regionin=\"state:09\")\n\nhousing_towns <- subset(housing_towns, county.subdivision!=\"00000\")\nhousing_towns$id <- sub(\" town.*\",\"\",housing_towns$NAME)\n\nold <- housing_towns\n\n# Calculating a housing score based on weighted categorizations of home ages\n\nold$age_39 <- old$B25034_010E * .68\nold$age40_59 <- (old$B25034_009E + old$B25034_008E) * .43\nold$age60_79 <- (old$B25034_007E + old$B25034_006E) * .08\nold$age80_99 <- (old$B25034_005E + old$B25034_004E) * .03\nold$age00_10 <- (old$B25034_003E + old$B25034_002E) * 0\nold$total <-  old$B25034_001E\n\nold$risk_sum <- old$age_39 + old$age40_59 + old$age60_79 + old$age80_99 + old$age80_99 + old$age00_10\nold$risk <- old$risk_sum/old$total*100\n\npoverty_towns <- getCensus(name=\"acs5\", \n                     vintage=2014,\n                     key=censuskey, \n                     vars=c(\"NAME\", \"B06012_001E\", \"B06012_002E\"\n                     ), \n                     region=\"county subdivision:*\", regionin=\"state:09\")\npoverty_towns <- subset(poverty_towns, county.subdivision!=\"00000\")\npoverty_towns$id <- sub(\" town.*\",\"\",housing_towns$NAME)\n\n# Determining percent of those living beneath the poverty line \n\npoverty_towns$percent_poverty <- poverty_towns$B06012_002E/poverty_towns$B06012_001E * 100\n\n# Z score\n# (x-mean(x))/sd(x)\n\npoverty_towns$z_poverty <- (poverty_towns$percent_poverty - mean(poverty_towns$percent_poverty))/sd(poverty_towns$percent_poverty)\nold$z_housing <-  (old$risk - mean(old$risk))/sd(old$risk)\n\n# Calcuating weighted figures\npoverty_towns$weighted_poverty <- poverty_towns$z_poverty * .42\nold$weighted_housing <- old$z_housing * .58\n\nold <- old[c(\"id\", \"risk\", \"z_housing\", \"weighted_housing\")]\ndf <- left_join(poverty_towns, old)\n\ndf$riskscore_raw <- df$weighted_housing + df$weighted_poverty\ndf <- mutate(df, quantile = ntile(riskscore_raw, 10))\n\n## mapping\n\ngpclibPermit()\ngpclibPermitStatus()\ntowntracts <- readOGR(dsn=\"maps\", layer=\"ctgeo\")\ntowntracts_only <- towntracts\ntowntracts <- fortify(towntracts, region=\"NAME10\")\n\ndf_town_map <- left_join(towntracts, df)\n\ndtm_df1 <- ggplot() +\n  geom_polygon(data = df_town_map , aes(x=long, y=lat, group=group, fill=quantile), color = \"black\", size=0.2) +\n  coord_map() +\n  scale_fill_distiller(type=\"seq\", trans=\"reverse\", palette = \"Blues\", breaks=pretty_breaks(n=10)) +\n  theme_nothing(legend=TRUE) +\n  labs(title=\"Estimated lead risk by town\", fill=\"\")\n\ndtm_df1\n```\n\n-----\n\n### Checking for correlations between different columns of data\n\n```{r comparison, message=FALSE, warning=FALSE, fig.width=12, fig.height=7}\n# Comparing results\n\ncomparing <- df[c(\"id\", \"quantile\", \"riskscore_raw\", \"percent_poverty\", \"risk\")]\n\ncomparing <- left_join(comparing, bll5_total)\ncomparing <- left_join(comparing, bll10_total)\ncomparing <- left_join(comparing, bll15_total)\ncomparing <- left_join(comparing, bll20_total)\n\ncolnames(bll5_percent) <- c(\"id\", \"bll5.percent\")\ncomparing <- left_join(comparing, bll5_percent)\n\ncolnames(bll10_percent) <- c(\"id\", \"bll10.percent\")\ncomparing <- left_join(comparing, bll10_percent)\n\ncolnames(bll15_percent) <- c(\"id\", \"bll15.percent\")\ncomparing <- left_join(comparing, bll15_percent)\n\ncolnames(bll20_percent) <- c(\"id\", \"bll20.percent\")\ncomparing <- left_join(comparing, bll20_percent)\n\n#dtm_df1$quantile\n#dtm_df1$riskscore_raw\n\ncorrgram(comparing,order=TRUE, lower.panel=panel.shade,\n         upper.panel=panel.pie)\n\n```\n\n#### Looks like there's a correlation between blood lead levels and in the risk score. (A coefficient of `r cor(comparing$bll10, comparing$riskscore_raw)` -- that's pretty significant) \n\n----\n\n### Analyzing elevated lead actions\n\n```{r elevated, message=FALSE, warning=FALSE, fig.width=12, fig.height=7}\n# This data set is from another story\n# Methodology on how to get the raw data is at\n# https://github.com/trendct/data/tree/master/2016/03/lead-analysis#how-to-get-the-list-of-lead-violations-from-the-epa\n\nct <- read.csv(\"data/lead_ale_samples_ct.csv\", stringsAsFactors=FALSE)\n\n# The data set doesn't have the business address. But we can get it from another data set\n# -- this one is a list of all public drinking systems in Connecticut\n\nsummary <- read.csv(\"data/water_system_summary.csv\", stringsAsFactors=FALSE)\n\n# Join it to the dataset with elevated lead action levels\n\nct <- left_join(ct, summary, by=\"PWS.ID\")\n\n# Creating a new column with the link-- fortunately the EPA's URL structure is based on a few variables we already have\n\nct$link <- paste0(\"https://oaspub.epa.gov/enviro/sdw_report_v3.first_table?pws_id=\",\n                           ct$PWS.ID, \"&state=CT&source=\",\n                          ct$Primary.Source.Code, \"&population=\", \n                         ct$Population.Served.Count)\n\n# Looking at towns served by drinking water systems with elevated lead violations\nserved <- ct %>%\n  group_by(Cities.Served) %>%\n  dplyr::summarise(Total=n())\n\nserved_single <- served[!grepl(\",\", served$Cities.Served),]\nserved_single <- served_single[!grepl(\"-\", served_single$Cities.Served),]\ncolnames(served_single) <- c(\"id\", \"Total\")\nserved_single$id <- str_to_title(served_single$id)\ncomparing <- left_join(comparing, served_single)\n\ncor(comparing$riskscore_raw, comparing$Total, use = \"complete\")\n\ncomparing$Total[is.na(comparing$Total)] <- 0\ncor(comparing$riskscore_raw, comparing$Total)\n\n# scrape addresses of listed drinking water headquarter by visiting each individual drinking water page\n\n# creating a temp column\nct$address.city <- \",\"\n\n# Visiting each link in the row, finding the third row in the first table and getting the string found there\n\nct <- read.csv(\"data/ct_dataframe.csv\", stringsAsFactors=FALSE)\n\n## The following chunk of code might take more time than you're willing to spend since it's scraping 500+ websites\n## That's why I brought in the dataframe above\n## If you'd like to unskip, just comment out the line above and uncomment the following lines where SKIPPING OPTION begins\n\n### BEGIN SKIPPING OPTION\n\n#for (i in 1:nrow(ct)) {\n#  i_url <- ct$link[i] %>% read_html()\n#  ct$address.city[i] <- i_url %>% html_node(\"tr:nth-child(3) td\") %>%\n#    html_text()\n#}\n\n# Cleaning up the address names to isolate the city\n\n#ct$town.city <- sub(\",.*\",\"\",ct$address.city)\n#ct$state <- sub(\".*,\",\"\",ct$address.city)\n#ct$state <- sub(\"  .*$\",\"\",ct$state)\n\n### END SKIPPING OPTION\n\n# Ignoring drinking water systems outside of Connecticut-- there's quite a few in New York and Mass.\nct_only <- subset(ct, state==\"CT\")\n\nhq <- ct %>%\n  group_by(town.city) %>%\n  dplyr::summarise(Total=n())\n\n# Bringing in a custom package I wrote that cleans up town names, renames hamlets and villages\nlibrary(ctnamecleaner)\n\nhq2 <- ctnamecleaner(town.city, hq)\nhq3 <- hq2[!is.na(hq2$real.town.name),]\n\nhq4 <- hq3 %>%\n  group_by(real.town.name) %>%\n  dplyr::summarise(Total=sum(Total))\n\ncolnames(hq4) <- c(\"id\", \"town.hqs\")\ncomparing <- left_join(comparing, hq4)\n```\n\n### Is there a correlation between the number of violations per town (since 2000) and the risk score? \n\nBased on the town where the drinking water system indicated it was located.\n\n```{r correl1}\ncor(comparing$riskscore_raw, comparing$town.hqs, use = \"complete\")\n```\n\n#### Guess not.\n\n```{r next, message=FALSE, warning=FALSE, fig.width=12, fig.height=7}\n#comparing$town.hqs[is.na(comparing$town.hqs)] <- 0\n#cor(comparing$riskscore_raw, comparing$town.hqs)\n\n## cleaner towns served instances\n\n## Had to bring this out of R to clean by hand. Sorry!\n\n## Now I'm bringing it back in\n\ntserv <- read.csv(\"data/towns_served.csv\", stringsAsFactors=FALSE)\ntserv$Towns <- str_to_title(tserv$Towns)\ncolnames(tserv) <- c(\"id\", \"towns.served\")\ncomparing <- left_join(comparing, tserv)\n\ncor(comparing$riskscore_raw, comparing$towns.served, use = \"complete\")\n\ncomparing$towns.served[is.na(comparing$towns.served)] <- 0\ncor(comparing$riskscore_raw, comparing$towns.served)\n\ncor(comparing$bll20.percent, comparing$towns.served)\n\ncor(comparing$bll20.percent, comparing$town.hqs)\n```\n\n-----\n\nAlright, there is not much of a correlation between number of elevated lead water violations from drinking water systems in the towns they serve. \n\n### Mapping elevated lead action level violations by town (since 2000)\n\n```{r map_time, message=FALSE, warning=FALSE, fig.width=12, fig.height=7}\n\nserved_count_map <- left_join(towntracts, comparing)\n\ndtm_served <- ggplot() +\n  geom_polygon(data = served_count_map, aes(x=long, y=lat, group=group, fill=towns.served), color = \"black\", size=0.2) +\n  coord_map() +\n  scale_fill_distiller(type=\"seq\", trans=\"reverse\", palette = \"Blues\", breaks=pretty_breaks(n=10)) +\n  theme_nothing(legend=TRUE) +\n  labs(title=\"Towns served\", fill=\"\")\n\ndtm_hqs <- ggplot() +\n  geom_polygon(data = served_count_map, aes(x=long, y=lat, group=group, fill=town.hqs), color = \"black\", size=0.2) +\n  coord_map() +\n  scale_fill_distiller(type=\"seq\", trans=\"reverse\", palette = \"Blues\", breaks=pretty_breaks(n=10)) +\n  theme_nothing(legend=TRUE) +\n  labs(title=\"System address\", fill=\"\")\n\n## Outputting the results\ngrid.arrange(dtm_served,dtm_hqs, ncol=2)\n```\n\n-----\n\n#### Determining median and average parts per billion in water systems with elevated levels of lead reported. \n\nTowns based on locations drinking water systems indicated they were headquartered.\n\n```{r ppbs, message=FALSE, warning=FALSE, fig.width=12, fig.height=7}\nppbs_towns <- ct %>%\n  group_by(town.city) %>%\n  summarize(median.ppb=median(Sample.Measure..mg.L.)*1000, average.ppb=mean(Sample.Measure..mg.L.)*1000)\n\nppbs_towns_clean <- ctnamecleaner(town.city, ppbs_towns)\nppbs_towns_clean <- ppbs_towns_clean[!is.na(ppbs_towns_clean$real.town.name),]\n\nppbs_towns_clean <- ppbs_towns_clean %>%\n  group_by(real.town.name) %>%\n  summarize(median.ppb=median(median.ppb), average.ppb=mean(average.ppb))\n\ncolnames(ppbs_towns_clean) <- c(\"id\", \"median.ppb.hq\", \"average.ppb.hq\")\ncomparing <- left_join(comparing, ppbs_towns_clean)\n\nppb_map_hq <- left_join(towntracts, comparing)\n\n\ndtm_median <- ggplot() +\n  geom_polygon(data = ppb_map_hq, aes(x=long, y=lat, group=group, fill=median.ppb.hq), color = \"black\", size=0.2) +\n  coord_map() +\n  scale_fill_distiller(type=\"seq\", trans=\"reverse\", palette = \"Blues\", breaks=pretty_breaks(n=10)) +\n  theme_nothing(legend=TRUE) +\n  labs(title=\"Median PPB by town\", fill=\"\")\n\n\ndtm_avg <- ggplot() +\n  geom_polygon(data = ppb_map_hq, aes(x=long, y=lat, group=group, fill=average.ppb.hq), color = \"black\", size=0.2) +\n  coord_map() +\n  scale_fill_distiller(type=\"seq\", trans=\"reverse\", palette = \"Blues\", breaks=pretty_breaks(n=10)) +\n  theme_nothing(legend=TRUE) +\n  labs(title=\"Average PPB by town\", fill=\"\")\n\ngrid.arrange(dtm_median,dtm_avg, ncol=2)\n```\n\n------\n\nAnd is there a correlation between the risk score and median/average ppb in water systems with elevated levels of lead reported?\n\n```{r cor_risk}\ncor(comparing$riskscore_raw, comparing$median.ppb.hq, use = \"complete\")\ncor(comparing$riskscore_raw, comparing$average.ppb.hq, use = \"complete\")\n\ncomparing$median.ppb.hq[is.na(comparing$median.ppb.hq)] <- 0\ncomparing$average.ppb.hq[is.na(comparing$average.ppb.hq)] <- 0\n\ncor(comparing$riskscore_raw, comparing$median.ppb.hq)\ncor(comparing$riskscore_raw, comparing$average.ppb.hq)\n\n```\n\nNope.\n\n------\n\n### Determining median and average parts per billion in water systems with elevated levels of lead reported. \n\nThis time in towns based on locations drinking water systems indicated they were served.\n\n```{r served, message=FALSE, warning=FALSE, fig.width=12, fig.height=7}\nppbs_served <- ct %>%\n  group_by(Cities.Served) %>%\n  summarize(median.ppb=median(Sample.Measure..mg.L.)*1000, average.ppb=mean(Sample.Measure..mg.L.)*1000)\n\nppbs_served_clean <- ctnamecleaner(Cities.Served, ppbs_served)\nppbs_served_clean <- ppbs_served_clean[!is.na(ppbs_served_clean$real.town.name),]\n\nppbs_served_clean <- ppbs_served_clean %>%\n  group_by(real.town.name) %>%\n  summarize(median.ppb=median(median.ppb), average.ppb=mean(average.ppb))\n\ncolnames(ppbs_served_clean) <- c(\"id\", \"median.ppb.served\", \"average.ppb.served\")\ncomparing <- left_join(comparing, ppbs_served_clean)\n\nppb_map_hq <- left_join(towntracts, comparing)\n\n\ndtm_median_served <- ggplot() +\n  geom_polygon(data = ppb_map_hq, aes(x=long, y=lat, group=group, fill=median.ppb.served), color = \"black\", size=0.2) +\n  coord_map() +\n  scale_fill_distiller(type=\"seq\", trans=\"reverse\", palette = \"Blues\", breaks=pretty_breaks(n=10)) +\n  theme_nothing(legend=TRUE) +\n  labs(title=\"Median PPB by town served\", fill=\"\")\n\n\ndtm_avg_served <- ggplot() +\n  geom_polygon(data = ppb_map_hq, aes(x=long, y=lat, group=group, fill=average.ppb.served), color = \"black\", size=0.2) +\n  coord_map() +\n  scale_fill_distiller(type=\"seq\", trans=\"reverse\", palette = \"Blues\", breaks=pretty_breaks(n=10)) +\n  theme_nothing(legend=TRUE) +\n  labs(title=\"Average PPB by town served\", fill=\"\")\n\ngrid.arrange(dtm_median_served,dtm_avg_served, ncol=2)\n```\n\n-----\n\nAnd is there a correlation between the risk score and median/average ppb in water systems with elevated levels of lead reported?\n\n(Based on towns served)\n\n```{r served_correlation}\ncor(comparing$riskscore_raw, comparing$median.ppb.served, use = \"complete\")\ncor(comparing$riskscore_raw, comparing$average.ppb.served, use = \"complete\")\n\ncomparing$median.ppb.served[is.na(comparing$median.ppb.served)] <- 0\ncomparing$average.ppb.served[is.na(comparing$average.ppb.served)] <- 0\n\ncor(comparing$riskscore_raw, comparing$median.ppb.served)\ncor(comparing$riskscore_raw, comparing$average.ppb.served)\n```\n\nDoesn't look like it.\n\n-----\n\n### Categorizing the towns \n\nAdding factorization to the towns might yield more insights.\n\n```{r urban_rural, message=FALSE, warning=FALSE, fig.width=9, fig.height=4}\n## urban or rural?\n\ndesignation <- read.csv(\"data/urban_or_rural.csv\", stringsAsFactors=FALSE)\ntown_des <- designation[c(\"NAME10\", \"Type\", \"perc_urban\")]\ncolnames(town_des) <-c(\"id\", \"Type\", \"perc_urban\")\n\ncomparing <- left_join(comparing, town_des)\n\nbig_df <- comparing\nbig_df_0 <- big_df\nbig_df_0[is.na(big_df_0)] <- 0\n\nbig_df_na <- big_df\nbig_df_na[big_df_na==0] <- NA\n\nraw_scatter1_0 <- big_df_0[c(\"id\", \"riskscore_raw\", \"bll5.percent\")]\nraw_scatter1_0 <- raw_scatter1_0 %>%\n  gather(\"Type\", \"Score\", 2:3)\n\np <- ggplot(big_df_na, aes(riskscore_raw, bll5.percent))\np + geom_point(aes(colour = factor(Type))) + labs(title = \"Percent of children with lead detected in blood versus risk score by town type\", x = \"Risk score\", y=\"% of children with lead detected in blood stream\")\ncor(big_df_na$riskscore_raw, big_df_na$bll5.percent, use=\"complete\")\n\np <- ggplot(big_df_na, aes(riskscore_raw, bll5))\np + geom_point(aes(colour = Type)) + labs(title = \"Number of children with lead detected in blood versus risk score by town type\", x = \"Risk score\", y=\"Children with lead detected in blood stream\")\ncor(big_df_0$riskscore_raw, big_df_0$bll5)\n\np <- ggplot(big_df_0, aes(bll5.percent, quantile))+ labs(title = \"Number of children with lead detected in blood versus risk score by town type\", x = \"% of children with lead detected in blood stream\", y=\"Risk score\")\np + geom_point(aes(colour = factor(Type)))\ncor(big_df_0$quantile, big_df_0$bll5.percent)\n\n\ncorrgram(big_df_na,order=TRUE, lower.panel=panel.shade,\n         upper.panel=panel.pie)\n```\n\nInteresting.\n\n-----\n\n### Boxplots\n\n```{r boxplots, message=FALSE, warning=FALSE, fig.width=9, fig.height=4}\np <- ggplot(big_df_na, aes(factor(Type), quantile))\np + geom_boxplot() + labs(title = \"Risk scores by town type\")\n\np <- ggplot(big_df_0, aes(factor(Type), bll5.percent))\np + geom_boxplot() + labs(title = \"Percent of children with lead detected in blood by town type\")\n\np <- ggplot(big_df_na, aes(factor(Type), median.ppb.served))\np + geom_boxplot() + labs(title = \"Median ppb detected in some town's drinking water\")\n```\n\n### Final maps with the most interesting data points\n\n```{r last_maps,  message=FALSE, warning=FALSE, fig.width=12, fig.height=7}\n# final maps\n\nbig_df_na_map <- left_join(towntracts, big_df_na, by=\"id\")\n\nmap1 <- ggplot() +\n  geom_polygon(data =big_df_na_map, aes(x=long, y=lat, group=group, fill=riskscore_raw), color = \"black\", size=0.2) +\n  coord_map() +\n  scale_fill_distiller(type=\"seq\", trans=\"reverse\", palette = \"Blues\", breaks=pretty_breaks(n=10)) +\n  theme_nothing(legend=TRUE) +\n  labs(title=\"Lead risk score\", fill=\"\")\n\nmap2 <- ggplot() +\n  geom_polygon(data =big_df_na_map, aes(x=long, y=lat, group=group, fill=bll5), color = \"black\", size=0.2) +\n  coord_map() +\n  scale_fill_distiller(type=\"seq\", trans=\"reverse\", palette = \"Blues\", breaks=pretty_breaks(n=10)) +\n  theme_nothing(legend=TRUE) +\n  labs(title=\"Lead-poisoned children by town (BLL 5 and up)\", fill=\"\")\n\nmap3 <- ggplot() +\n  geom_polygon(data =big_df_na_map, aes(x=long, y=lat, group=group, fill=towns.served), color = \"black\", size=0.2) +\n  coord_map() +\n  scale_fill_distiller(type=\"seq\", trans=\"reverse\", palette = \"Blues\", breaks=pretty_breaks(n=10)) +\n  theme_nothing(legend=TRUE) +\n  labs(title=\"Median PPB detected in drinking water systems\", fill=\"\")\n\nmap4 <- ggplot() +\n  geom_polygon(data =big_df_na_map, aes(x=long, y=lat, group=group, fill=median.ppb.served), color = \"black\", size=0.2) +\n  coord_map() +\n  scale_fill_distiller(type=\"seq\", trans=\"reverse\", palette = \"Blues\", breaks=pretty_breaks(n=10)) +\n  theme_nothing(legend=TRUE) +\n  labs(title=\"Frequency of elevated action lead levels detected in drinking water\", fill=\"\")\n\ngrid.arrange(map2, map1, map3, map4, ncol=2)\n```\n\n-----\n\n## Conclusions\n\nLarge urban areas like New Haven and Hartford have some of the highest risks for lead exposure, and the data on children who test positive for high lead levels in their blood reflects that. But the formula indicates there's also high risk in pockets of towns like Mansfield, Norwich and Danbury.\n\nAfter applying the formula to towns and comparing it to the number of children reported to have high lead levels, we found a strong correlation between the estimate and the actuality (a coefficient of about .57).\n\nAccording to our analysis, there's a closer link between lead poisoning and old buildings or poverty than to drinking water systems with high lead levels.\n\nThis is in line with findings by the Connecticut Department of Health in 2013.\n\nThough the tragedy in Flint, Mich., where thousands of children drank toxic water in their homes and schools, has increased awareness of lead in public drinking water systems, Connecticut officials did not trace any of the 140 cases of lead-poisoned children it investigated in 2013 back to drinking water.\n\nMost cases were attributed to paint- and dust-related hazards.\n\nRead the full story at [TrendCT.org](http://trendct.org/2016/04/08/where-the-risk-for-lead-poisoning-in-connecticut-is-highest/).",
    "created" : 1460133395590.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1838626651",
    "id" : "5BC08C7C",
    "lastKnownWriteTime" : 1460149769,
    "last_content_update" : 1460149769645,
    "path" : "~/Documents/Github/trendct-data/2016/03/lead-analysis/lead_risk_analysis.Rmd",
    "project_path" : "lead_risk_analysis.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}